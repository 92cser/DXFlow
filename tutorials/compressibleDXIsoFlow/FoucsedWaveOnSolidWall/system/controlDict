/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    location        "system";
    class           dictionary;
    object          controlDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     compressibleDXIsoFlow;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         90;

deltaT          0.001;

writeControl    adjustableRunTime;

writeInterval   0.5;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.2;
maxAlphaCo	 0.2;

maxDeltaT       0.05;

// ************************************************************************* //

functions
{
	surfaceElevation
	{
		type            sets;
		libs            ("libsampling.so");
		writeControl    timeStep;
		writeInterval   10;

		interpolationScheme cellPoint;

		setFormat       raw;

		sets
		(
			GaugeVOF00
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 35.6 0.01 -0.1 );
				end     ( 35.6 0.01 0.2 );
			}   
			GaugeVOF01
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 36.8 0.01 -0.1 );
				end     ( 36.8 0.01 0.2 );
			}   
			GaugeVOF02
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 38.0 0.01 -0.1 );
				end     ( 38.0 0.01 0.2 );
			}   
			GaugeVOF03
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 39.0 0.01 -0.1 );
				end     ( 39.0 0.01 0.2 );
			}   
			GaugeVOF04
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 40.2 0.01 -0.1 );
				end     ( 40.2 0.01 0.2 );
			}   
			GaugeVOF05
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 41.4 0.01 -0.1 );
				end     ( 41.4 0.01 0.2 );
			}   
			GaugeVOF06
			{
				type    uniform;
				nPoints  800;
				axis    z;
				start   ( 44.1 0.01 -0.1 );
				end     ( 44.1 0.01 0.2 );
			}   
		);

		fields          ( alpha.water );
	}

	PProbes
	{
		type            patchProbes;
		libs            ( "libsampling.so" );

		// Name of the directory for probe data
		name            PProbes;

		patches         ("outlet");

		// Write at same frequency as fields
		writeControl    timeStep;
		writeInterval   1;

		interpolationScheme cell;

		fixedLocations 	false;

		// Fields to be probed
		fields          (p p_rgh);

		// Locations to probe. These get snapped onto the nearest point
		// on the selected patches
		probeLocations
		(
			(45 0.01 -0.13)     
			(45 0.01 -0.11)
			(45 0.01 -0.09)
			(45 0.01 -0.07)
			(45 0.01 -0.05)
			(45 0.01 -0.03)
			(45 0.01 -0.01)
			(45 0.01  0.01)
			(45 0.01  0.03)
			(45 0.01  0.05)
			(45 0.01  0.07)
			(45 0.01  0.09)
			(45 0.01  0.11)
			(45 0.01  0.13)
			(45 0.01  0.15)
			(45 0.01  0.17)  
		);
	}
   
        UProbes
	{
		type            probes;
		libs            ( "libsampling.so" );

		// Name of the directory for probe data
		name            UProbes;

		// Write at same frequency as fields
		writeControl    timeStep;
		writeInterval   1;

		interpolationScheme cell;

		fixedLocations 	false;

		// Fields to be probed
		fields          (U);

		// Locations to probe. These get snapped onto the nearest point
		// on the selected patches
		probeLocations
		(
			(38 	0.01  -0.15)   
			(39 	0.01  -0.1) 
			(41.1 	0.01  -0.1) 
			(42.95  0.01  -0.1)      
		);
	}
	
	LimitT
	{
		type			limitFields;
		libs 			("fieldFunctionObjects");
		fields			(T);
		limit 			both;
		min			280;
		max			320;
		writeControl		outputTime;	
	}
}
